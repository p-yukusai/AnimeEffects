name: Ubuntu LTS
on: 
    workflow_dispatch:
    schedule:
        - cron: '0 0 * * *'
jobs:
  buildOnLTS:
    runs-on: ubuntu-20.04
    container:
      image: ubuntu:jammy
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
    - name: Get Dependencies
      run: |
        apt update
        apt upgrade -y
        apt install -y software-properties-common g++ make cmake ninja-build wget rsync build-essential libglib2.0-0 libgl1-mesa-dev file openssl python3 python3-pip 
        apt install -y qt6-base-dev qt6-multimedia-dev qt6-image-formats-plugins libqt6core5compat6-dev
        apt install -y libvulkan-dev
        export LD_LIBRARY_PATH=$LD_LIBARY_PATH:/usr/local/lib64:/usr/local/lib
        export LDFLAGS="-L/usr/local/lib -L/usr/local/lib64 -Wl,-rpath,/usr/local/lib -Wl,-rpath,/usr/local/lib64"
        
    #- name: Setup Python 3.9
     # uses: actions/setup-python@v5.1.0
      #with:
       #    python-version: 3.9
    - name: Get aqt and its dependencies
      run: |
          python3 -m ssl
          python3 -m pip install --upgrade pip
          python3 -m pip install requests semantic_version patch py7zr texttable bs4 defusedxml
          python3 -m pip install aqtinstall
    - name: Get Qt 6.6
      run: |
          python -m aqt install-qt linux desktop 6.6.2 gcc_64 -m qtimageformats qtmultimedia qt5compat
          python -m aqt install-tool linux desktop tools_cmake
          python -m aqt install-tool linux desktop tools_ninja
    - name: Build AnimeEffects
      shell: bash
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        cmake -S . -B build -G "Ninja Multi-Config"
        cmake --build build --config Release
        dir
        mkdir -p bin
        dir
        cp AnimeEffects bin
        dir
        cp -R data bin/data
        dir
        find appdir/
        export APPIMAGE_EXTRACT_AND_RUN=1
        wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        if [[ "$RELEASE_VERSION" != "" ]]; then export VERSION=$RELEASE_VERSION;fi
        chmod a+x linuxdeployqt-continuous-x86_64.AppImage
        ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -extra-plugins=imageformats, multimedia -appimage -verbose=2
    - name: Github Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AnimeEffects 
        path: |
          AnimeEffects-x86_64.AppImage

